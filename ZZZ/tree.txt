.
|-- common
|   |-- database
|   |   |-- __pycache__
|   |   |   `-- db_utils.cpython-312.pyc
|   |   |-- bulk_insert_utils.py
|   |   |-- check_db.py
|   |   |-- data_seeder.py
|   |   `-- db_utils.py
|   |-- logs
|   |   |-- __pycache__
|   |   |   `-- logger.cpython-312.pyc
|   |   `-- logger.py
|   |-- message_broker
|   |   |-- __pycache__
|   |   |   |-- consumer_config.cpython-312.pyc
|   |   |   |-- consumer_manager.cpython-312.pyc
|   |   |   `-- rabbitmq_utils.cpython-312.pyc
|   |   |-- consumer_config.py
|   |   |-- consumer_manager.py
|   |   `-- rabbitmq_utils.py
|   `-- worker_manager
|       |-- __pycache__
|       |   `-- worker_manager.cpython-312.pyc
|       `-- worker_manager.py
|-- requirements.txt
|-- services
|   `-- service1_driver_management
|       |-- Dockerfile
|       |-- __pycache__
|       |   |-- app.cpython-312.pyc
|       |   |-- consumer_objects.cpython-312.pyc
|       |   `-- message_handlers.cpython-312.pyc
|       |-- app.py
|       |-- events
|       |   |-- __pycache__
|       |   |   |-- consumer_objects.cpython-312.pyc
|       |   |   `-- message_handlers.cpython-312.pyc
|       |   |-- consumer_objects.py
|       |   |-- message_handlers.py
|       |   `-- workers.py
|       |-- fleet_management.log
|       |-- models
|       |   |-- __init__.py
|       |   |-- __pycache__
|       |   |   |-- __init__.cpython-312.pyc
|       |   |   `-- driver_model.cpython-312.pyc
|       |   `-- driver_model.py
|       |-- routes
|       |   |-- __init__.py
|       |   |-- __pycache__
|       |   |   |-- __init__.cpython-312.pyc
|       |   |   `-- driver_routes.cpython-312.pyc
|       |   `-- driver_routes.py
|       `-- sample_data.json



this is my tree 
i have an image of service one whose docker file is like


# Step 1: Use an official Python runtime
FROM python:3.12-slim

# Step 2: Set the working directory inside the container
WORKDIR /app

# Step 3: Install required system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    libmariadb-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Step 4: Copy the 'common' directory into the container
COPY ./common /app/common

# Step 5: Copy only 'service1_driver_management' into its correct path
RUN mkdir -p /app/services
COPY ./services/service1_driver_management /app/services/service1_driver_management

# Step 6: Copy the .env file into the container
COPY .env.docker /app/.env.docker

# Step 7: Copy requirements.txt from the project root
COPY ./requirements.txt /app/requirements.txt

# Step 8: Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Step 9: Expose the correct port (5001)
EXPOSE 5001

# Step 10: Set the working directory to service1_driver_management
WORKDIR /app/services/service1_driver_management

# Step 11: Command to run the service
CMD ["python", "app.py"]



i want to make it work with sql container

this is my .env.docker file
# .env.docker

# Common Configurations
FLASK_ENV=development
DB_HOST=mysql
DB_USER=root
DB_PASSWORD=1234
DB_PORT=3306
FLASK_HOST=0.0.0.0

# Service-Specific Configurations
SERVICE_1_PORT=5001
SERVICE_1_DB_NAME=driver_management
SERVICE_1_URL="http://127.0.0.1:5001"

I want build a network in docker 
for the db this is my uri 
def get_uri(username, password, host, port, database):
        return f"mysql+pymysql://{username}:{password}@{host}:{port}/{database}"

iam changing from xamp to docker

i have some MQ stuff and i want to use rabbit MQ docker

how do i set up my docker compose file for service 1 working with mySQL and phpadmin GUI and rabbit MQ