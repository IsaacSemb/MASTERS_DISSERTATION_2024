
# the version of docker compose we use
version: "3.9"

# our services --- database --- message broker
services:

  # my service that has end points
  service1_driver_management:

    # how to build image
    build:
      
      # the build image context ( our root to build )
      context: .

      # the docker file to use when building the image
      dockerfile: ./services/service1_driver_management/Dockerfile
    
    # the port that our service will be using in docker
    ports:
      - "${SERVICE_1_PORT}:${SERVICE_1_PORT}"

    # relative to our compose file where the envs are  
    env_file:
      - .env.docker
    
    # means only start after these have started
    depends_on:
      - mysql
      - rabbitmq

    # the general network inside our container  
    networks:
      - app_network

  # our database container
  mysql:

    # the image it will use to build container
    image: mysql:8.0

    # what name we want to give it
    container_name: mysql

    # the port on which mySQL will listen
    ports:
      - "${DB_PORT}:3306"
    
    # the envs that mysql works with
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${SERVICE_1_DB_NAME}
    
    # the persistent data that my sql will keep
    volumes:
      - mysql_data:/var/lib/mysql
    
    # our internal docker network
    networks:
      - app_network

  #-------------------- think now i get the point
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: ${DB_PORT}
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - mysql
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672" # Management UI
      - "5672:5672"   # AMQP port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
